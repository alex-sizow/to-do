{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\alex_\\\\projects\\\\javascript\\\\udemy-react-project\\\\to-do\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\alex_\\\\projects\\\\javascript\\\\udemy-react-project\\\\to-do\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react'; // Component для инициализации класса\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport ToDoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport NewItem from '../new-item';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Криндж'), this.createTodoItem('Сделай хоть что-нибудь'), this.createTodoItem('Наверстать слепой ввод')],\n      term: '',\n      filter: 'label'\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        console.log(idx); // не трогай старый state(состояние) ну крч вот этот массив иначальный\n\n        const before = todoData.slice(0, idx);\n        const after = todoData.slice(idx + 1);\n        const newArray = [...before, ...after];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArray = [...todoData, newItem];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.onFilterAll = () => {\n      this.setState(({\n        filter\n      }) => {\n        return {\n          filter: 'label'\n        };\n      });\n    };\n\n    this.onFilterActive = () => {\n      this.setState(({\n        filter\n      }) => {\n        return {\n          filter: 'important'\n        };\n      });\n    };\n\n    this.onFilterDone = () => {\n      this.setState(({\n        filter\n      }) => {\n        return {\n          filter: 'done'\n        };\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n\n    const newItem = _objectSpread({}, oldItem, {\n      [propName]: !oldItem[propName]\n    });\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  filterProperty(arr, filterName = 'label') {\n    if (filterName === 'label') {\n      return arr;\n    }\n\n    return arr.filter(item => {\n      return item[filterName];\n    });\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoData = _this$state.todoData,\n          term = _this$state.term,\n          filter = _this$state.filter;\n    const visibleItems = this.filterProperty(this.search(todoData, term), filter);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      onSearchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      onAll: this.onFilterAll,\n      onFilterActive: this.onFilterActive,\n      onFilterDone: this.onFilterDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(ToDoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(NewItem, {\n      onAdd: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["C:\\Users\\alex_\\projects\\javascript\\udemy-react-project\\to-do\\src\\components\\app\\app.js"],"names":["React","Component","AppHeader","SearchPanel","ToDoList","ItemStatusFilter","NewItem","App","maxId","state","todoData","createTodoItem","term","filter","deleteItem","id","setState","idx","findIndex","el","console","log","before","slice","after","newArray","addItem","text","newItem","onToggleDone","toggleProperty","onToggleImportant","onSearchChange","onFilterAll","onFilterActive","onFilterDone","label","important","done","arr","propName","oldItem","filterProperty","filterName","item","search","items","length","toLowerCase","indexOf","render","visibleItems","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// Component для инициализации класса\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ToDoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter'\r\nimport NewItem from '../new-item';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n    \r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Криндж'),\r\n            this.createTodoItem('Сделай хоть что-нибудь'),\r\n            this.createTodoItem('Наверстать слепой ввод')\r\n        ],\r\n        term: '',\r\n        filter: 'label'\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id:  this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        \r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            console.log(idx)\r\n            // не трогай старый state(состояние) ну крч вот этот массив иначальный\r\n            const before = todoData.slice(0, idx);\r\n            const after = todoData.slice(idx + 1);\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        \r\n        const newItem = this.createTodoItem(text)\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return {\r\n                todoData : newArray\r\n            };\r\n        })\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        const oldItem = arr[idx];\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n        return [...arr.slice(0, idx), newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {   \r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {   \r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        });\r\n    }\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n\r\n    };\r\n\r\n    filterProperty(arr, filterName = 'label') {\r\n        if (filterName === 'label') {\r\n            return arr\r\n        }\r\n\r\n        return arr.filter((item) => {\r\n            return item[filterName];\r\n        })\r\n    }\r\n\r\n    onFilterAll = () => {\r\n        this.setState(({filter}) => {\r\n            return {\r\n                filter: 'label'\r\n            }\r\n        })\r\n    }\r\n\r\n    onFilterActive = () => {\r\n        this.setState(({filter}) => {\r\n            return {\r\n                filter: 'important'\r\n            }\r\n        })\r\n    }\r\n\r\n    onFilterDone = () => {\r\n        this.setState(({filter}) => {\r\n            return {\r\n                filter: 'done'\r\n            }\r\n        })    \r\n    }\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItems = this.filterProperty(\r\n                                this.search(todoData, term), filter)\r\n        const doneCount = todoData\r\n                            .filter((el) => el.done).length;   \r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel \r\n                        onSearchChange={this.onSearchChange}/>\r\n                    <ItemStatusFilter\r\n                        onAll={this.onFilterAll}\r\n                        onFilterActive={this.onFilterActive}\r\n                        onFilterDone={this.onFilterDone}/>\r\n                </div>\r\n        \r\n            <ToDoList \r\n                todos={visibleItems} \r\n                onDeleted={ this.deleteItem }\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleDone={this.onToggleDone} />\r\n            <NewItem \r\n                onAdd={ this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}